open Microsoft.Quantum.Diagnostics;
operation Solve (x : Qubit[], y : Qubit) : Unit {
    body (...) {
        using (qs=Qubit[2]){
            X(qs[1]);
            for(i in 0..Length(x)-1){
                CCNOT(qs[0], qs[1], x[i]);
                CNOT(qs[0], qs[1]);
                CNOT(qs[1], qs[0]);
                CNOT(qs[0], qs[1]);
                if(M(qs[0])==One){X(qs[0]);}
            }
            CNOT(qs[1], y);
            CNOT(y, qs[1]);
            CNOT(qs[1], y);
            ResetAll(qs);
        }
    }
    //adjoint auto;
}




open Microsoft.Quantum.Diagnostics;
operation s(): Unit {
    body (...) {
        using (a = Qubit[3]) {
            using (b = Qubit()) {
                X(b);
                X(a[0]);
                X(a[1]);
                X(a[2]);
                DumpMachine();
                Solve(a, b);
                DumpMachine();

                ResetAll(a);
                Reset(b);
            }
        }
    }
}